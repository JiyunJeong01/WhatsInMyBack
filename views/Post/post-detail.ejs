

<head>
  <!--<link rel="stylesheet" href="./styles/post-detail.css"이거 없어요 안 쓰이죠?-->
  <!--<link rel="stylesheet" href="..\..\public\css\global.css"/>-->
  <link rel="stylesheet" href="/public/css/global.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw==" crossorigin="anonymous" referrerpolicy="no-referrer" />

  <style>
    /* 기존 스타일들 */
    .content {
      display: flex;
    }
    .left {
      flex: 1;
      margin-right: 20px; /* 오른쪽 섹션과의 간격 */
    }
    .right {
      flex: 1;
      margin: 15px;
    }
    .section {
      margin-bottom: 25px;
      white-space: pre-wrap; /* 공백과 줄바꿈을 모두 유지하면서 필요에 따라 자동으로 줄바꿈 */
    }
    .content-area {
      margin-top: 20px;
      margin-bottom: 30px;
    }

    /* 해시태그 버튼 스타일 */
    .hashtag-button {
        display: inline-block;
        background-color: #ffffff; /* 백그라운드 색상을 하얀색으로 변경 */
        color: #6c757d; /* 텍스트 색상을 회색으로 유지 */
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
        border: 1px solid #6c757d; /* 1px 두께의 회색 테두리 */
        border-radius: 1rem; /* 모서리 라운드로 만들기 */
        margin-right: 0.5rem;
        margin-bottom: 0.5rem;
    }

     /* h1 요소를 버튼처럼 보이게 하는 추가 스타일 */
     .btn-title {
      display: inline-block;
      background-color: #ffffff; /* 백그라운드 색상을 흰색으로 변경 */
      color: #000000; /* 텍스트 색상을 검정색으로 설정 */
      border: 1px solid #000000; /* 테두리를 검정색으로 설정 */
      font-size: 1.0rem; /* h4 기본 크기 (1.5rem) */
      font-weight: 400; /* h4 기본 굵기 (400) */
      padding: 0.25rem 0.5rem; /* 버튼 크기를 줄임 */
      border-radius: 0.5rem; /* 모서리를 라운드로 설정 */
  }

    /* h1 요소 위에 여백 추가 */
    .title-margin {
      margin-top: 50px; /* 원하는 여백 크기로 설정 */
  }

     /* h1 요소 위에 여백 추가 */
     .title-margin2 {
      margin-top: 10px; /* 원하는 여백 크기로 설정 */
  }
  </style>
</head>

<body>
  <div class="container">
    <div class="row">
      <!-- 사진 -->
      <div class="col-md-6">
        <div class="left">
          <hr>
          <% Object.keys(pages).forEach(function(key) { %>
            <div class="upload-detail-container mb-4" data-index="<%= key %>">
              <div class="upload-section mb-2">
                <div id="uploadedImage<%= key %>">
                  <% if (pages[key].image) { %>
                    <img src="<%= pages[key].image %>" alt="Uploaded Image" style="width: 100%;">
                  <% } %>
                </div>
              </div>
              <div class="detail-section">
                <div id="productList<%= key %>">
                  <hr>
                  <% pages[key].products.forEach(function(product) { %>
                    <div class="d-flex justify-content-between product-item">
                      <small class="text-muted">제품명: <%= product.name %></small>
                      <small class="text-muted">제품카테고리: <%= product.category %></small>
                      <small class="text-muted">제품브랜드: <%= product.brand %></small>
                      <small class="text-muted">제품링크: <a href="<%= product.link %>" target="_blank" rel="noopener noreferrer">링크</a></small>
                    </div>
                    <hr>
                  <% }); %>
                </div>
              </div>
            </div>
            <hr>
          <% }); %>
        </div>
      </div>

      <!-- 정보 -->
      <div class="col-md-6">

        <!-- 테마 -->
        <p class="btn btn-primary btn-title"><%= post.theme_name %></p>

        <!-- 제목 -->
        <h1><%= post.post_title %></h1>

        <!-- 프로필 섹션 -->
        <div class="d-flex align-items-center mb-3">
          <a href="/profile/<%= member.member_id %>">
            <img src="<%= member.picture_base64 %>" alt="Profile Picture" class="rounded-circle mr-3" style="width: 50px; height: 50px; margin-right: 10px;" />
          </a>
          <div>
            <h5 class="mb-0"><%= member.username %></h5>
            <small class="text-muted"><%= member.nickname %></small>
          </div>
        </div>

        <hr style="border-top: 1.5px solid #495057;">

        <!-- 추가 정보 -->
        <div class="d-flex justify-content-between align-items-center">
          <p>조회수 <%= post.views %></p>
        </div>

        <!-- 내용 -->
        <div class="content-area">
          <h5>내용:</h5>
          <p class="section"><%= post.post_content %></p>
        </div>

        <!-- 해시태그 및 작성일 -->
        <div class="d-flex flex-column">
          <div class="mb-2">
            <% post.hashtags.split(' ').forEach(hashtag => { %>
              <span class="hashtag-button"><%= hashtag %></span>
            <% }) %>
          </div>
          <div class="d-flex justify-content-between align-items-center">
            <div>
              <%
              const createdAt = new Date(post.created_at);
              const formattedCreatedAt = `${createdAt.getFullYear()}.${String(createdAt.getMonth() + 1).padStart(2, '0')}.${String(createdAt.getDate()).padStart(2, '0')}`;
              %>
              <span style="margin-right: 10px;">작성일: <%= formattedCreatedAt %></span>
              <% if (post.updated_at) { %>
                <%
                const updatedAt = new Date(post.updated_at);
                const formattedUpdatedAt = `${updatedAt.getFullYear()}.${String(updatedAt.getMonth() + 1).padStart(2, '0')}.${String(updatedAt.getDate()).padStart(2, '0')}`;
                %>
                <span>수정일: <%= formattedUpdatedAt %></span>
            <% } %>
            </div>
          </div>
        </div>

        <!-- 좋아요/북마크 -->
        <div class="d-flex justify-content-end mb-3">
          <button id="likeButton" class="btn btn-outline-secondary btn-sm mr-2" style="margin-right: 10px; color: black;">
            <i id="likeIcon" class="far fa-heart" style="color: red;"></i> 좋아요 (<span id="likeCount"><%= post.like_count %></span>)
          </button>
          <button id="bookmarkButton" class="btn btn-outline-secondary btn-sm">
            <i id="bookmarkIcon" class="far fa-bookmark"></i> 북마크 (<span id="bookmarkCount"><%= post.bookmark_count %></span>)
          </button>
        </div>
    
    

        <!-- 수정 및 삭제 버튼 -->
        <% if (isAuthor) { %> <!-- 수정: isAuthor 변수를 사용하여 조건부 렌더링 -->
          <div class="d-flex justify-content-end mb-3">
            <a href="/post/<%= post.post_id %>/edit" class="btn btn-primary btn-sm mr-2 btn-dark" style="margin-right: 10px;">게시글 수정</a>
            <form id="deleteForm" action="/post/<%= post.post_id %>/delete" method="POST" class="mr-2">
              <button type="submit" class="btn btn-danger btn-sm btn-dark">게시글 삭제</button>
            </form>
          </div>
        <% } %>

        <!-- 댓글 입력 폼 -->
        <% if (user) { %> <!-- 로그인 여부 확인 -->
          <div class="mb-3">
            <h4>댓글 작성</h4>
            <form id="comment-form" class="d-flex">
              <div class="flex-grow-1 mr-2">
                <textarea id="comment-input" class="form-control" rows="3" placeholder="댓글을 입력하세요"></textarea>
              </div>
              <button type="submit" class="btn btn-outline-secondary">댓글 작성</button>
            </form>
          </div>
        <% } %>

      <!-- 댓글 목록 -->
      <h4>댓글 목록</h4>
      <p><%= post.comment_count %></p>
      <div id="comment-list">
        <% if (comments.length === 0) { %>
          <p>등록된 댓글이 없습니다.</p>
        <% } else { %>
          <div class="list-group">
            <% comments.forEach(comment => { %>
              <div class="list-group-item">
                <div class="d-flex align-items-center">
                  <a href="/profile/<%= comment.member_id %>">
                    <img src="<%= comment.picture_base64 %>" alt="Profile Picture" class="rounded-circle mr-3" style="width: 30px; height: 30px" />
                  </a>
                  <div>
                    <h6 class="mb-0"><%= comment.username %> (<%= comment.nickname %>)</h6>
                    <small class="text-muted"><%= formatDate(comment.created_at) %></small>
                  </div>
                </div>
                <p class="mt-2 mb-0"><%= comment.comment_content %></p>

                <!-- 대댓글 작성 폼 -->
                <% if (user) { %> <!-- 로그인 여부 확인 -->
                  <div class="mt-2">
                    <a href="#" class="btn btn-sm btn-outline-secondary" onclick="toggleReplyForm('<%= comment.comment_id %>')">대댓글 작성</a>
                    <form id="reply-form-<%= comment.comment_id %>" class="mt-2" style="display: none;">
                      <div class="input-group">
                        <input type="text" class="form-control" placeholder="대댓글을 입력하세요">
                        <div class="input-group-append">
                          <button type="submit" class="btn btn-outline-secondary">작성</button>
                        </div>
                      </div>
                    </form>
                  </div>
                <% } %>

                <!-- 대댓글 목록 -->
                <div id="reply-list-<%= comment.comment_id %>" class="mt-2">
                  <% comment.replies.forEach(reply => { %>
                
                    <div class="list-group-item">
                      <div class="d-flex align-items-center">
                        <a href="/profile/<%= reply.member_id %>">
                         <img src="<%= reply.picture_base64 %>" alt="Profile Picture" class="rounded-circle mr-3" style="width: 30px; height: 30px" />
                        </a>
                        <div>
                          <h6 class="mb-0"><%= reply.username %> (<%= reply.nickname %>)</h6>
                          <small class="text-muted"><%= formatDate(reply.created_at) %></small>
                        </div>
                      </div>
                      <p class="mt-2 mb-0"><%= reply.comment_content %></p>
                    </div>
                  <% }) %>
                </div>
                
              </div>
            <% }) %>
          </div>
        <% } %>
      </div>
    </div>
  </div>
</div>
<!--폼데이트 함수?-->

</body>

<script>
const likeButton = document.getElementById('likeButton');
const likeIcon = document.getElementById('likeIcon');
const bookmarkButton = document.getElementById('bookmarkButton');
const likeCount = document.getElementById('likeCount');
const bookmarkCount = document.getElementById('bookmarkCount');
const postId = '<%= post.post_id %>';
const userId = '<%= user ? user.id : "null" %>';

function formatDate(dateString) {
  const date = new Date(dateString);
  const year = date.getFullYear();
  const month = date.getMonth() + 1;
  const day = date.getDate();
  const hour = date.getHours();
  const minute = date.getMinutes();
  
  // UTC 시간을 로컬 시간대로 변환
  const localDate = new Date(date.getTime() - (date.getTimezoneOffset() * 60000));
  const localHour = localDate.getHours();
  const localMinute = localDate.getMinutes();
  
  return `${year}/${month}/${day} 작성시간:${localHour}시 ${localMinute}분`;
}

// 좋아요 버튼 이벤트 리스너
likeButton.addEventListener('click', function() {
  if (userId === 'null') { // 로그인 여부 확인
    alert('로그인이 필요합니다.');
    return;
  }

  fetch('/post/like', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ postId, memberId: userId })
  })
  .then(response => response.json())
  .then(data => {
    if (data.liked) {
      likeIcon.classList.remove('far'); // 빈 하트 아이콘 클래스 제거
      likeIcon.classList.add('fas'); // 채워진 하트 아이콘 클래스 추가
      likeCount.innerText = parseInt(likeCount.innerText) + 1;
      alert('좋아요를 등록했습니다');
    } else {
      likeIcon.classList.remove('fas'); // 채워진 하트 아이콘 클래스 제거
      likeIcon.classList.add('far'); // 빈 하트 아이콘 클래스 추가
      likeCount.innerText = parseInt(likeCount.innerText) - 1;
      alert('좋아요 등록을 해제했습니다');
    }
  })
  .catch(error => console.error('좋아요 변경 중 오류 발생:', error));
});

// 북마크 버튼 이벤트 리스너
bookmarkButton.addEventListener('click', function() {
if (userId === 'null') { // 로그인 여부 확인
  alert('로그인이 필요합니다.');
  return;
}
fetch('/post/bookmark', {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ postId, memberId: userId })
})
.then(response => response.json())
.then(data => {
  if (data.bookmarked) {
    bookmarkIcon.classList.remove('far'); // 빈 북마크 아이콘 클래스 제거
    bookmarkIcon.classList.add('fas'); // 채워진 북마크 아이콘 클래스 추가
    bookmarkIcon.style.color = 'black'; // 북마크 아이콘 색상을 검은색으로 설정
    bookmarkCount.innerText = parseInt(bookmarkCount.innerText) + 1;
    alert('북마크를 등록했습니다');
  } else {
    bookmarkIcon.classList.remove('fas'); // 채워진 북마크 아이콘 클래스 제거
    bookmarkIcon.classList.add('far'); // 빈 북마크 아이콘 클래스 추가
    bookmarkIcon.style.color = ''; // 북마크 아이콘 색상 초기화
    bookmarkCount.innerText = parseInt(bookmarkCount.innerText) - 1;
    alert('북마크 등록을 해제했습니다');
  }
})
.catch(error => console.error('북마크 변경 중 오류 발생:', error));
});

// 대댓글 작성 폼 표시/숨김 함수
function toggleReplyForm(commentId) {
  event.preventDefault();
  const replyForm = document.getElementById(`reply-form-${commentId}`);
  replyForm.style.display = replyForm.style.display === 'none' ? 'block' : 'none';
}

document.addEventListener('DOMContentLoaded', function () {
  // 대댓글 작성 폼 제출 이벤트 핸들러 (함수 정의)
  function addReplyFormEventListeners() {
    document.querySelectorAll('[id^="reply-form-"]').forEach(form => {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const commentId = form.id.split('-')[2];
        const replyInput = form.querySelector('input[type="text"]');
        const replyContent = replyInput.value.trim();
        
        if (!replyContent) return;

        try {
          const response = await fetch(`/post/${postId}/comment/${commentId}/reply`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ comment_content: replyContent }),
          });

          if (response.ok) {
            const newReply = await response.json();
            const replyList = document.getElementById(`reply-list-${commentId}`);
            const replyElement = document.createElement('div');
            replyElement.classList.add('list-group-item');
            replyElement.innerHTML = `
              <div class="d-flex align-items-center">
                <a href="/profile/${newReply.member_id}">
                  <img src="${newReply.picture_base64}" alt="Profile Picture" class="rounded-circle mr-3" style="width: 30px; height: 30px" />
                </a>
                <div>
                  <h6 class="mb-0">${newReply.username} (${newReply.nickname})</h6>
                  <small class="text-muted">${formatDate(newReply.created_at)}</small>
                </div>
              </div>
              <p class="mt-2 mb-0">${newReply.comment_content}</p>
            `;
            replyList.insertBefore(replyElement, replyList.firstChild);
            replyInput.value = '';
            form.style.display = 'none'; // 이 코드를 제거하여 대댓글 작성 폼을 계속 보이게 함 (상관 없었던 것 같다.)
          } else {
            console.error('Failed to create reply');
          }
        } catch (error) {
          console.error('Error:', error);
        }
      });
    });
  }

  // 댓글 작성 폼 제출 이벤트 핸들러
  document.getElementById('comment-form').addEventListener('submit', async (e) => {
    e.preventDefault();

    const commentInput = document.getElementById('comment-input');
    const commentContent = commentInput.value.trim();

    if (!commentContent) return;

    try {
      const response = await fetch(`/post/${postId}/comment`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ comment_content: commentContent }),
      });
      if (response.ok) {
        const newComment = await response.json();
        const commentList = document.getElementById('comment-list');
        const commentElement = document.createElement('div');
        commentElement.classList.add('list-group-item');
        commentElement.innerHTML = `
          <div class="d-flex align-items-center">
            <a href="/profile/${newComment.member_id}">
              <img src="${newComment.picture_base64}" alt="Profile Picture" class="rounded-circle mr-3" style="width: 30px; height: 30px" />
            </a>
            <div>
              <h6 class="mb-0">${newComment.username} (${newComment.nickname})</h6>
              <small class="text-muted">${formatDate(newComment.created_at)}</small>
            </div>
          </div>
          <p class="mt-2 mb-0">${newComment.comment_content}</p>
          <div class="mt-2">
            <a href="#" class="btn btn-sm btn-outline-secondary" onclick="toggleReplyForm('${newComment.comment_id}')">대댓글 작성</a>
            <form id="reply-form-${newComment.comment_id}" class="mt-2" style="display: none;">
              <div class="input-group">
                <input type="text" class="form-control" placeholder="대댓글을 입력하세요">
                <div class="input-group-append">
                  <button type="submit" class="btn btn-outline-secondary">작성</button>
                </div>
              </div>
            </form>
          </div>
          <div id="reply-list-${newComment.comment_id}" class="mt-2"></div>
        `;
        commentList.insertBefore(commentElement, commentList.firstChild);
        commentInput.value = '';

        // 새로 추가된 대댓글 폼에 이벤트 리스너 등록
        addReplyFormEventListeners();
      } else {
        console.error('Failed to create comment');
      }
    } catch (error) {
      console.error('Error:', error);
    }
  });

  // 초기 로드 시 기존 대댓글 폼에 이벤트 리스너 등록
  addReplyFormEventListeners();
});

</script>