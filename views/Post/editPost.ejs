<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>게시글 수정</title>
    <style>
        /* 기본 스타일 설정 */
        body {
            font-family: Arial, sans-serif;
        }
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .content {
            display: flex;
            width: 100%;
            margin-top: 20px;
        }
        .left, .right {
            flex: 1;
            padding: 10px;
        }
        .left {
            border-right: 1px solid #ccc;
        }
        .section {
            margin-bottom: 20px;
        }
        .section img {
            max-width: 100%;
        }
        .upload-section {
            border: 2px solid orange;
            padding: 10px;
        }
        .detail-section {
            border: 2px solid skyblue;
            padding: 10px;
        }
        .product-section {
            border: 2px solid green;
            padding: 10px;
        }
        .product-item {
            margin-bottom: 10px;
        }
        .pagination {
            display: flex;
            justify-content: center;
            margin-top: 10px;
        }
        .pagination button {
            margin: 0 5px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>게시글 수정</h1>
        <form id="postForm" action="/post/update" method="post" enctype="multipart/form-data">
            <!-- 게시글 ID 숨김 필드 -->
            <input type="hidden" name="post_id" value="<%= post.post_id %>">
            <!-- 주제 선택 박스 -->
            <div class="section">
                <label for="theme_id">테마 선택:</label>
                <select name="theme_id" id="theme_id">
                    <% themes.forEach(function(theme) { %>
                        <option value="<%= theme.theme_id %>" <%= theme.theme_id === post.theme_id ? 'selected' : '' %>><%= theme.theme_name %></option>
                    <% }); %>
                </select>
            </div>
            <!-- 제목 입력 -->
            <div class="section">
                <label for="title">제목:</label>
                <input type="text" id="title" name="post_title" value="<%= post.post_title %>" required>
            </div>
            <!-- 멤버 ID 숨김 필드 -->
            <input type="hidden" name="member_id" value="<%= memberId %>">
            <div class="content">
                <!-- 왼쪽 영역 -->
                <div class="left">
                    <!-- 이미지 업로드 및 상세 제품 영역 -->
                    <div id="imagePage">
                        <div class="upload-section">
                            <label>이미지 업로드 창</label>
                            <input type="file" id="image" onchange="previewImage(event)">
                            <div id="uploadedImage">
                                <% imagesData.forEach(function(image, index) { %>
                                    <div class="img-container" data-page="<%= index + 1 %>">
                                        <img src="<%= image.image_base64 %>" alt="이미지">
                                        <button type="button" onclick="removeImage(index + 1)">삭제</button>
                                    </div>
                                <% }); %>
                            </div>
                        </div>
                        <div class="detail-section">
                            <label>상세 제품 목록</label>
                            <div id="productList">
                                <% productsData.forEach(function(product) { %>
                                    <div class="product-item" data-page="<%= product.image_id %>">
                                        <input type="text" name="product_name[]" value="<%= product.product_name %>" placeholder="제품명">
                                        <input type="text" name="product_category[]" value="<%= product.product_category %>" placeholder="제품 카테고리">
                                        <input type="text" name="product_brand[]" value="<%= product.brand %>" placeholder="제품 브랜드">
                                        <input type="text" name="product_link[]" value="<%= product.purchase_link %>" placeholder="구매 링크">
                                        <button type="button" onclick="removeProduct(this)">삭제</button>
                                    </div>
                                <% }); %>
                            </div>
                            <button type="button" onclick="addProduct()">제품 추가</button>
                        </div>
                    </div>
                    <!-- 페이지 넘기기 버튼 -->
                    <div class="pagination">
                        <button type="button" onclick="prevPage()">이전</button>
                        <span id="pageNumber">1</span>
                        <button type="button" onclick="nextPage()">다음</button>
                    </div>
                </div>
                <!-- 오른쪽 영역 -->
                <div class="right">
                    <div class="section">
                        <label for="content">내용:</label>
                        <textarea id="content" name="post_content" required><%= post.post_content %></textarea>
                    </div>
                    <div class="section">
                        <label for="hashtags">해시태그:</label>
                        <input type="text" id="hashtags" name="hashtags" value="<%= post.hashtags %>">
                    </div>
                </div>
            </div>
            <!-- 저장된 데이터 전송 -->
            <button type="button" onclick="submitForm()">수정하기</button>
        </form>
    </div>
    <script>
        // 페이지 번호 관리 변수 및 페이지 데이터 저장용 객체
        let currentPage = 1;
        const pages = {};

        // EJS 데이터에서 JSON 변환
        const imagesData = JSON.stringify(imagesData);
        const productsData = JSON.stringify(productsData);

        // 기존 데이터를 페이지 객체에 저장
        imagesData.forEach(function(post_image) {
            if (!pages[post_image.image_id]) {
                pages[post_image.image_id] = { products: [], image: '' };
            }
            pages[post_image.image_id].image = post_image.image_base64;
        });

        productsData.forEach(function(product) {
            if (!pages[product.image_id]) {
                pages[product.image_id] = { products: [], image: '' };
            }
            pages[product.image_id].products.push({
                name: product.product_name,
                category: product.product_category,
                brand: product.brand,
                link: product.purchase_link
            });
        });


        // 제품 추가 함수
        function addProduct() {
            const productList = document.getElementById('productList');
            const productItem = document.createElement('div');
            productItem.className = 'product-item';
            productItem.innerHTML = `
                <input type="text" name="product_name[]" placeholder="제품명">
                <input type="text" name="product_category[]" placeholder="제품 카테고리">
                <input type="text" name="product_brand[]" placeholder="제품 브랜드">
                <input type="text" name="product_link[]" placeholder="구매 링크">
                <button type="button" onclick="removeProduct(this)">삭제</button>
            `;
            //productItem.setAttribute('data-page', currentPage);
            productList.appendChild(productItem);
        }

        // 제품 삭제 함수
        function removeProduct(button) {
            const productItem = button.parentElement;
            productItem.remove();
        }

        // 이미지 미리보기 및 저장 함수
        function previewImage(event) {
            const imageInput = event.target;
            const uploadedImage = document.getElementById('uploadedImage');
            uploadedImage.innerHTML = ''; // 이전 이미지 초기화

            if (imageInput.files && imageInput.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const imgContainer = document.createElement('div');
                    imgContainer.className = 'img-container';
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    const removeButton = document.createElement('button');
                    removeButton.textContent = '삭제';
                    removeButton.onclick = () => removeImage(currentPage);
                    imgContainer.appendChild(img);
                    imgContainer.appendChild(removeButton);
                    uploadedImage.appendChild(imgContainer);

                    // 이미지 데이터를 페이지 객체에 저장
                    saveImageToPage(currentPage, e.target.result);
                };
                reader.readAsDataURL(imageInput.files[0]);
            }
        }

        // 이미지 데이터를 페이지 객체에 저장
        function saveImageToPage(page, imageData) {
            if (!pages[page]) {
                pages[page] = { products: [], image: '' };
            }
            pages[page].image = imageData;
        }


        // 페이지 객체에서 이미지 데이터를 불러오기
        function loadImageFromPage(page) {
            if (pages[page] && pages[page].image) {
                return pages[page].image;
            }
            return null;
        }

        // 페이지 객체에서 이미지 데이터 삭제
        function removeImage(page) {
            if (pages[page]) {
                pages[page].image = '';
                document.getElementById('uploadedImage').innerHTML = '';
            }
        }

        // 페이지 넘기기 함수
        function nextPage() {
            saveCurrentPageData();
            currentPage++;
            updatePageNumber();
            loadPageData();
        }

        function prevPage() {
            if (currentPage > 1) {
                saveCurrentPageData();
                currentPage--;
                updatePageNumber();
                loadPageData();
            }
        }

        function updatePageNumber() {
            document.getElementById('pageNumber').innerText = currentPage;
        }

        // 현재 페이지 데이터 저장 함수
        function saveCurrentPageData() {
            const productList = document.getElementById('productList');
            const products = [];
            productList.querySelectorAll('.product-item').forEach(item => {
                const productName = item.querySelector('input[name="product_name[]"]').value;
                const productCategory = item.querySelector('input[name="product_category[]"]').value;
                const productBrand = item.querySelector('input[name="product_brand[]"]').value;
                const productLink = item.querySelector('input[name="product_link[]"]').value;
                products.push({
                    name: productName,
                    category: productCategory,
                    brand: productBrand,
                    link: productLink,
                    page: currentPage
                });
            });
            if (!pages[currentPage]) {
                pages[currentPage] = { products: [], image: '' };
            }
            pages[currentPage].products = products;
            localStorage.setItem('pages', JSON.stringify(pages));
        }

        // 페이지 데이터 불러오기 함수
        function loadPageData() {
            const productList = document.getElementById('productList');
            const uploadedImage = document.getElementById('uploadedImage');
            productList.innerHTML = ''; // 기존 제품 목록 초기화
            uploadedImage.innerHTML = ''; // 기존 이미지 미리보기 초기화

            // 제품 목록 불러오기
            if (pages[currentPage]) {
                const pageData = pages[currentPage];
                pageData.products.forEach(product => {
                    const productItem = document.createElement('div');
                    productItem.className = 'product-item';
                    //productItem.setAttribute('data-page', currentPage);
                    productItem.innerHTML = `
                        <input type="text" name="product_name[]" value="${product.name}" placeholder="제품명">
                        <input type="text" name="product_category[]" value="${product.category}" placeholder="제품 카테고리">
                        <input type="text" name="product_brand[]" value="${product.brand}" placeholder="제품 브랜드">
                        <input type="text" name="product_link[]" value="${product.link}" placeholder="구매 링크">
                        <button type="button" onclick="removeProduct(this)">삭제</button>
                    `;
                    productList.appendChild(productItem);
                });

                // 이미지 불러오기
                const imageData = loadImageFromPage(currentPage);
                if (imageData) {
                    const imgContainer = document.createElement('div');
                    imgContainer.className = 'img-container';
                    const img = document.createElement('img');
                    img.src = imageData;
                    const removeButton = document.createElement('button');
                    removeButton.textContent = '삭제';
                    removeButton.onclick = () => removeImage(currentPage);
                    imgContainer.appendChild(img);
                    imgContainer.appendChild(removeButton);
                    uploadedImage.appendChild(imgContainer);
                }
            }
        }

        // 페이지 로드시 초기 데이터 불러오기
        window.onload = function() {
            const savedPages = localStorage.getItem('pages');
            if (savedPages) {
                Object.assign(pages, JSON.parse(savedPages));
            }
            loadPageData();
        };

        // 폼 데이터 전송 함수
        function submitForm() {
            saveCurrentPageData(); // 현재 페이지 데이터 저장
            const postData = {
                post_id: document.querySelector('input[name="post_id"]').value,
                member_id: document.querySelector('input[name="member_id"]').value,
                theme_id: document.querySelector('select[name="theme_id"]').value,
                post_title: document.querySelector('input[name="post_title"]').value,
                post_content: document.querySelector('textarea[name="post_content"]').value,
                hashtags: document.querySelector('input[name="hashtags"]').value
            };

            const imagesData = [];
            const productsData = [];

            for (const [page, data] of Object.entries(pages)) {
                if (data.image) {
                    imagesData.push({
                        image_id: page, // page_index
                        image_base64: data.image
                    });
                }

                data.products.forEach(product => {
                    productsData.push({
                        product_name: product.name,
                        product_category: product.category,
                        brand: product.brand,
                        purchase_link: product.link,
                        image_id: page // page_index
                    });
                });
            }

            fetch('/post/update', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    postData: postData, 
                    imagesData: imagesData, 
                    productsData: productsData
                })
            })
            .then(response => response.json())
            .then(data => {
                console.log('Success:', data);
            })
            .catch((error) => {
                console.error('Error:', error);
                // 에러 시 처리 로직 추가
            });
        }
    </script>
</body>
</html>
