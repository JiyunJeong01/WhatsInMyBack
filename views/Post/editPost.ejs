<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>게시글 수정</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .container {
            display: flex;
            flex-direction: column;
            margin-bottom: 40px;
        }
        .content {
            display: flex;
            width: 100%;
            margin-top: 20px;
        }
        .left, .right {
            flex: 1;
            padding: 10px;
        }
        .left {
            border-right: 1px solid #ccc;
            width: 70%;
        }
        .section {
            margin-bottom: 20px;
        }
        .upload-section, .detail-section, .product-section {
            padding: 10px;
            margin-bottom: 10px;
            width: 40%;
        }
        .upload-section img {
            width: 100%;
            height: auto;
            object-fit: contain;
        }
        .product-item {
            margin-bottom: 10px;
        }
        .button-group {
            display: flex;
            justify-content: space-between;
        }
        .remove-page-button {
            width: 100%; /* 버튼이 컨테이너의 전체 너비를 차지하도록 설정 */
            margin-bottom: 10px; /* 버튼과 다음 섹션 사이에 여백 추가 */
            background-color: hsla(4, 74%, 63%, 0.849); /* 버튼 색상, 필요에 따라 조정 */
            color: rgb(0, 0, 0); /* 글자 색상 */
            border: none;
            padding: 10px 0; /* 상하 패딩 추가 */
            cursor: pointer; /* 마우스 오버 시 커서 변경 */
        }
        .upload-detail-container {
            display: flex;
            justify-content: space-between;
        }
        .upload-detail-container > div {
            flex: 1;
            margin-right: 10px;
        }
        .upload-detail-container > div:last-child {
            margin-right: 0;
        }
        textarea {
            width: 100%;
            height: 50vh;
            box-sizing: border-box;
        }
        input[type="text"] {
            width: 100%;
            height: 40px;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>게시글 수정</h1><hr>
        <form id="postForm" action="/post/update" method="put" enctype="multipart/form-data">
            <input type="hidden" id="pages" value='<%= JSON.stringify(pages) %>'>
            <input type="hidden" id="post_id" value='<%= JSON.stringify(post.post_id) %>'>
            <div class="section">
                <label for="theme_id">테마 선택:</label>
                <select name="theme_id" id="theme_id">
                    <% themes.forEach(function(theme) { %>
                        <option value="<%= theme.theme_id %>" <%= theme.theme_id === post.theme_id ? 'selected' : '' %>><%= theme.theme_name %></option>
                    <% }); %>
                </select>
            </div>
            <div class="section">
                <label for="title">제목:</label>
                <input type="text" id="title" name="post_title" value="<%= post.post_title %>" required>
            </div>
            <div class="content">
                <div class="left">
                    <hr>
                    <% Object.keys(pages).forEach(function(key) { %>
                        <div id="pageContainer_<%= key %>" class="page-container">
                            <button type="button" class="remove-page-button btn btn-danger" onclick="removePage('<%= key %>')">페이지 삭제</button>

                            <div class="upload-detail-container" data-index="<%= key %>">
                                <div class="upload-section">
                                    <label>이미지 업로드 창</label>
                                    <input type="file" onchange="previewImage(event, '<%= key %>')">
                                    <div id="uploadedImage<%= key %>">
                                        <% if (pages[key].image) { %>
                                            <img src="<%= pages[key].image %>" alt="Uploaded Image">
                                            <button class="btn btn-outline-dark" type="button" onclick="removeImage('<%= key %>')">삭제</button>
                                        <% } %>
                                    </div>
                                </div>
                                <div class="detail-section">
                                    <label>상세 제품 목록</label>
                                    <div id="productList<%= key %>">
                                        <hr>
                                        <% pages[key].products.forEach(function(product) { %>
                                            <div class="product-item">
                                                <small class="text-muted">제품명: <input type="text" name="product_name_<%= key %>[]", value="<%= product.name %>" placeholder="제품명" style="height: 30px;"></small>
                                                <small class="text-muted">제품카테고리: <input type="text" name="product_category_<%= key %>[]", value="<%= product.category %>" placeholder="제품 카테고리" style="height: 30px;"></small>
                                                <small class="text-muted">제품브랜드: <input type="text" name="product_brand_<%= key %>[]", value="<%= product.brand %>" placeholder="제품 브랜드" style="height: 30px;"></small>
                                                <small class="text-muted">제품링크: <input type="text" name="product_link_<%= key %>[]", value="<%= product.link %>" placeholder="구매 링크" style="height: 30px;"></small>
                                                <button class="btn btn-outline-dark" type="button" onclick="removeProduct(this)">삭제</button>
                                            </div>
                                            <hr>
                                        <% }); %>
                                    </div>
                                    <button class="btn btn-outline-dark" type="button" onclick="addProduct('<%= key %>')">제품 추가</button>
                                </div>
                            </div>
                            <hr>
                        </div>
                    <% }); %>
                </div>
                <div class="right">
                    <div class="section">
                        <label for="content">내용:</label>
                        <textarea id="content" name="post_content" required><%= post.post_content %></textarea>
                    </div>
                    <div class="section">
                        <label for="hashtags">해시태그:</label>
                        <input type="text" id="hashtags" name="hashtags" value="<%= post.hashtags %>">
                    </div>
                </div>
            </div>
            <div class="button-group">
                <button class="btn btn-outline-dark" type="button" onclick="addPage()">페이지 추가</button>
                <hr>
                <button class="btn btn-outline-dark" type="button" onclick="submitForm()">수정하기</button>
            </div>
        </form>
    </div>

    <script>
        let pages = JSON.parse(document.getElementById('pages').value);

        function addProduct(pageIndex) {
            const productList = document.getElementById('productList' + pageIndex);
            const productItem = document.createElement('div');
            productItem.className = 'product-item';
            productItem.innerHTML = `
                <input type="text" name="product_name_${pageIndex}[]" placeholder="제품명">
                <input type="text" name="product_category_${pageIndex}[]" placeholder="제품 카테고리">
                <input type="text" name="product_brand_${pageIndex}[]" placeholder="제품 브랜드">
                <input type="text" name="product_link_${pageIndex}[]" placeholder="구매 링크">
                <button type="button" onclick="removeProduct(this)">삭제</button>
            `;
            productList.appendChild(productItem);
        }

        function removeProduct(button) {
            const productItem = button.parentElement;
            productItem.remove();
        }

        function previewImage(event, pageIndex) {
            const imageInput = event.target;
            const uploadedImage = document.getElementById('uploadedImage' + pageIndex);
            uploadedImage.innerHTML = '';
            if (imageInput.files && imageInput.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    const removeButton = document.createElement('button');
                    removeButton.textContent = '삭제';
                    removeButton.onclick = () => removeImage(pageIndex);
                    uploadedImage.appendChild(img);
                    uploadedImage.appendChild(removeButton);

                    pages[pageIndex].image = e.target.result;
                };
                reader.readAsDataURL(imageInput.files[0]);
            }
        }

        function removeImage(pageIndex) {
            pages[pageIndex].image = '';
            document.getElementById('uploadedImage' + pageIndex).innerHTML = '';
        }

        // function removePage(pageIndex) {
        //     // pages 객체에서 페이지 삭제
        //     delete pages[pageIndex];
        //     // HTML에서 페이지 컨테이너 제거
        //     const pageContainer = document.querySelector(`.upload-detail-container[data-index="${pageIndex}"]`);
        //     pageContainer.parentNode.removeChild(pageContainer);
        // }
        function removePage(key) {
            // pages 객체에서 페이지 삭제
            delete pages[key];

            var pageElement = document.getElementById('pageContainer_' + key);
            if (pageElement) {
                pageElement.parentNode.removeChild(pageElement);
            }
        }

        function addPage() {
            const pageIndex = Object.keys(pages).length + 1;
            pages[pageIndex] = { image: '', products: [] };

            const leftSection = document.querySelector('.left');
            const pageContainer = document.createElement('div');
            pageContainer.id = 'pageContainer_' + pageIndex;
            pageContainer.className = 'page-container';

            const deleteButton = document.createElement('button');
            deleteButton.className = 'remove-page-button btn btn-danger';
            deleteButton.textContent = '페이지 삭제';
            deleteButton.onclick = function() { removePage(pageIndex); };
            pageContainer.appendChild(deleteButton);

            const uploadDetailContainer = document.createElement('div');
            uploadDetailContainer.className = 'upload-detail-container';
            uploadDetailContainer.setAttribute('data-index', pageIndex);

            const uploadSection = document.createElement('div');
            uploadSection.className = 'upload-section';
            uploadSection.innerHTML = `
                <label>이미지 업로드 창</label>
                <input type="file" onchange="previewImage(event, '${pageIndex}')">
                <div id="uploadedImage${pageIndex}"></div>
            `;

            const detailSection = document.createElement('div');
            detailSection.className = 'detail-section';
            detailSection.innerHTML = `
                <label>상세 제품 목록</label>
                <div id="productList${pageIndex}"></div>
                <button class="btn btn-outline-dark" type="button" onclick="addProduct('${pageIndex}')">제품 추가</button>
            `;

            uploadDetailContainer.appendChild(uploadSection);
            uploadDetailContainer.appendChild(detailSection);
            pageContainer.appendChild(uploadDetailContainer);
            leftSection.appendChild(pageContainer);
        }

        async function submitForm() {
            const postData = {
                post_id: document.getElementById('post_id').value,
                theme_id: document.querySelector('select[name="theme_id"]').value,
                post_title: document.querySelector('input[name="post_title"]').value,
                post_content: document.querySelector('textarea[name="post_content"]').value,
                hashtags: document.querySelector('input[name="hashtags"]').value,
            };

            const imagesData = [];
            const productsData = [];

            let canAddProducts = true;
            Object.keys(pages).forEach(key => {
                const page = pages[key];
                if (page.products.length > 0 && !page.image) {
                    canAddProducts = false;
                }

                imagesData.push({
                    image_id: key,
                    image_base64: page.image
                });
                
                const productNames = document.querySelectorAll(`input[name="product_name_${key}[]"]`);
                const productCategories = document.querySelectorAll(`input[name="product_category_${key}[]"]`);
                const productBrands = document.querySelectorAll(`input[name="product_brand_${key}[]"]`);
                const productLinks = document.querySelectorAll(`input[name="product_link_${key}[]"]`);

                for (let i = 0; i < productNames.length; i++) {
                    productsData.push({
                        product_name: productNames[i].value,
                        product_category: productCategories[i].value,
                        brand: productBrands[i].value,
                        purchase_link: productLinks[i].value,
                        image_id: key
                    });
                }
            });

            // 필수 필드 유효성 검사
            if (!postData.post_title || !postData.post_content || !pages[1] || !pages[1].image) {
                alert('제목, 내용 및 첫 번째 이미지를 입력해주세요.');
                return;
            } 

            // 이미지가 없으면서 제품이 있는 페이지 검사
            if (!canAddProducts) {
                alert('제품이 있는 페이지에는 반드시 이미지를 업로드해야 합니다.');
                return;
            }

            fetch('/post/update', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    postData: postData, 
                    imagesData: imagesData, 
                    productsData: productsData
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log('Success:', data);
                    window.location.href = data.redirect; // 서버로부터 받은 리디렉션 URL로 이동
                } else {
                    console.error('Failed to update post:', data.error);
                    // 실패 처리, 서버로부터 받은 오류 메시지를 표시할 수 있음
                }
            })
            .catch((error) => {
                console.error('Network Error:', error);
                // 네트워크 오류 처리, 사용자에게 네트워크 오류 메시지를 표시할 수 있음
            });
        }

    </script>
</body>
</html>
